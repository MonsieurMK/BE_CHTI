


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000         
    4 00000000         
    5 00000000         ; ====================== zone de réservation de données,
                         ======================================
    6 00000000         ;Section RAM (read only) :
    7 00000000                 area             mesdata,data,readonly
    8 00000000                 IMPORT           Son
    9 00000000                 IMPORT           LongueurSon
   10 00000000                 include          DriverJeuLaser.inc
    1 00000000         
    2 00000000         ; Bibliotheque DriverJeuLaser (ancienne gassp72 adaptée 
                       2021 - TR)
    3 00000000         ; Accès en aux fonctions suivantes :
    4 00000000         ; GPIO :
    5 00000000         ; GPIOA_Set(char Broche), GPIOB_Set(char Broche), GPIOC_
                       Set(char Broche)
    6 00000000         ; GPIOA_Clear(char Broche), GPIOB_Clear(char Broche), GP
                       IOC_Clear(char Broche)
    7 00000000         
    8 00000000         ; PWM :
    9 00000000         ;/**
   10 00000000         ; * @brief  Fixe une valeur de PWM, Val, en tick horloge
                       . La rapport cyclique effectif
   11 00000000         ; * est donc : rcy = Thaut_ticks / Periode_ticks
   12 00000000         ; * @note   spécifique Jeu Laser, PWM liée exclusivement
                        au TIM3, chan3
   13 00000000         ; * @param  Thaut_ticks : durée de l'état haut d'une imp
                       ulsion en Ticks
   14 00000000         ;  * @retval None
   15 00000000         ; */
   16 00000000         
   17 00000000         ;void PWM_Set_Value_TIM3_Ch3( unsigned short int Thaut_t
                       icks);
   18 00000000                 import           PWM_Set_Value_TIM3_Ch3
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;/**
   23 00000000         ; * @brief  Mise à 1 d'une broche GPIO 
   24 00000000         ;  * @note   Une fonction par GPIO
   25 00000000         ; * @param  Broche : 0 à 15
   26 00000000         ; * @retval None
   27 00000000         ; */
   28 00000000         
   29 00000000         ;void GPIOA_Set(char Broche);
   30 00000000                 import           GPIOA_Set
   31 00000000         
   32 00000000         ;void GPIOB_Set(char Broche);
   33 00000000                 import           GPIOB_Set
   34 00000000         
   35 00000000         ;void GPIOC_Set(char Broche);
   36 00000000                 import           GPIOC_Set
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;/**
   41 00000000         ; * @brief  Mise à 0 d'une broche GPIO 



ARM Macro Assembler    Page 2 


   42 00000000         ;  * @note   Une fonction par GPIO
   43 00000000         ; * @param  Broche : 0 à 15
   44 00000000         ; * @retval None
   45 00000000         ;  */
   46 00000000         
   47 00000000         ;void GPIOA_Clear(char Broche);
   48 00000000                 import           GPIOA_Clear
   49 00000000         
   50 00000000         ;void GPIOB_Clear(char Broche);
   51 00000000                 import           GPIOB_Clear
   52 00000000         
   53 00000000         ;void GPIOC_Clear(char Broche);
   54 00000000                 import           GPIOC_Clear
   55 00000000         
   56 00000000                 end
   11 00000000         
   12 00000000         ;Section RAM (read write):
   13 00000000                 area             maram,data,readwrite
   14 00000000         
   15 00000000 00 00   SortieSon
                               dcw              0
   16 00000002                 EXPORT           SortieSon
   17 00000002         
   18 00000002 00 00 00000000 
                       indexTable
                               dcd              0
   19 00000008                 EXPORT           indexTable
   20 00000008         
   21 00000008                 EXPORT           CallbackSon
   22 00000008                 EXPORT           StartSon
   23 00000008         
   24 00000008         ; ======================================================
                       =========================================
   25 00000008         
   26 00000008         
   27 00000008         ;Section ROM code (read only) :  
   28 00000008                 area             moncode,code,readonly
   29 00000000         ; écrire le code ici  
   30 00000000         
   31 00000000         CallbackSon
                               proc                         ; -32768 = 0, 32767
                                                             = 719
   32 00000000 4B0E            ldr              r3, =indexTable
   33 00000002 6819            ldr              r1, [r3]    ; r1 prend la valeu
                                                            r de l'index
   34 00000004 F8DF C038       ldr              r12, =LongueurSon
   35 00000008 F8DC C000       ldr              r12, [r12]  ; on stocke la Long
                                                            ueur du son dans r1
                                                            2
   36 0000000C 4561            cmp              r1, r12
   37 0000000E DA0E            bge              ValeurMax   ; si index >= Longu
                                                            eurSon (donc si l'i
                                                            ndex dépasse la val
                                                            eur max du tableau)
                                                            , on se rend au lab
                                                            el ValeurMax et on 
                                                            sort donc de la fon
                                                            ction
   38 00000010 4A0C            ldr              r2, =Son



ARM Macro Assembler    Page 3 


   39 00000012 F932 0011       ldrsh            r0, [r2, r1, lsl #1] ; on stock
                                                            e dans r0 la valeur
                                                             du Son avec l'indi
                                                            ce comme offset
   40 00000016 F500 4000       add              r0, #32768
   41 0000001A F04F 0C5B       mov              r12, #91
   42 0000001E FBB0 F0FC       udiv             r0, r12     ; on ramène les val
                                                            eurs de r0 dans la 
                                                            plage des valeurs p
                                                            ossibles : [0, 719]
                                                            
   43 00000022 F101 0101       add              r1, #1      ; on incrémente l'i
                                                            ndex
   44 00000026 6019            str              r1, [r3]
   45 00000028         ;ldr  r12, =SortieSon
   46 00000028         ;strh r0, [r12]
   47 00000028 B500            push             {lr}
   48 0000002A F7FF FFFE       bl               PWM_Set_Value_TIM3_Ch3
   49 0000002E         ValeurMax
   50 0000002E BD00            pop              {pc}
   51 00000030                 endp
   52 00000030         
   53 00000030         StartSon
                               proc
   54 00000030         ; remise à zero de l'index
   55 00000030 4902            ldr              r1, =indexTable
   56 00000032 F04F 0200       mov              r2, #0
   57 00000036 600A            str              r2, [r1]
   58 00000038 4770            bx               lr
   59 0000003A                 endp
   60 0000003A         
   61 0000003A                 END
              00 00 00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\gestionson.d -o.\obj\gestionson.o -I.\Driver -I.\RTE\_Simu -
IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Programd
ata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 530
" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --predefine="_RT
E_ SETA 1" --list=gestionson.lst Src\GestionSon.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdata 00000000

Symbol: mesdata
   Definitions
      At line 7 in file Src\GestionSon.s
   Uses
      None
Comment: mesdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SortieSon 00000000

Symbol: SortieSon
   Definitions
      At line 15 in file Src\GestionSon.s
   Uses
      At line 16 in file Src\GestionSon.s
Comment: SortieSon used once
indexTable 00000004

Symbol: indexTable
   Definitions
      At line 18 in file Src\GestionSon.s
   Uses
      At line 19 in file Src\GestionSon.s
      At line 32 in file Src\GestionSon.s
      At line 55 in file Src\GestionSon.s

maram 00000000

Symbol: maram
   Definitions
      At line 13 in file Src\GestionSon.s
   Uses
      None
Comment: maram unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CallbackSon 00000000

Symbol: CallbackSon
   Definitions
      At line 31 in file Src\GestionSon.s
   Uses
      At line 21 in file Src\GestionSon.s
Comment: CallbackSon used once
StartSon 00000030

Symbol: StartSon
   Definitions
      At line 53 in file Src\GestionSon.s
   Uses
      At line 22 in file Src\GestionSon.s
Comment: StartSon used once
ValeurMax 0000002E

Symbol: ValeurMax
   Definitions
      At line 49 in file Src\GestionSon.s
   Uses
      At line 37 in file Src\GestionSon.s
Comment: ValeurMax used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 28 in file Src\GestionSon.s
   Uses
      None
Comment: moncode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIOA_Clear 00000000

Symbol: GPIOA_Clear
   Definitions
      At line 48 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Clear unused
GPIOA_Set 00000000

Symbol: GPIOA_Set
   Definitions
      At line 30 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOA_Set unused
GPIOB_Clear 00000000

Symbol: GPIOB_Clear
   Definitions
      At line 51 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Clear unused
GPIOB_Set 00000000

Symbol: GPIOB_Set
   Definitions
      At line 33 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOB_Set unused
GPIOC_Clear 00000000

Symbol: GPIOC_Clear
   Definitions
      At line 54 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Clear unused
GPIOC_Set 00000000

Symbol: GPIOC_Set
   Definitions
      At line 36 in file .\Driver\DriverJeuLaser.inc
   Uses
      None
Comment: GPIOC_Set unused
LongueurSon 00000000

Symbol: LongueurSon
   Definitions
      At line 9 in file Src\GestionSon.s
   Uses
      At line 34 in file Src\GestionSon.s
Comment: LongueurSon used once
PWM_Set_Value_TIM3_Ch3 00000000

Symbol: PWM_Set_Value_TIM3_Ch3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 18 in file .\Driver\DriverJeuLaser.inc
   Uses
      At line 48 in file Src\GestionSon.s
Comment: PWM_Set_Value_TIM3_Ch3 used once
Son 00000000

Symbol: Son
   Definitions
      At line 8 in file Src\GestionSon.s
   Uses
      At line 38 in file Src\GestionSon.s
Comment: Son used once
9 symbols
354 symbols in table
